var app=angular.module("tips",["ui.router","angularMoment","ngTagsInput"]);app.factory("auth",["$http","$window",function(e,t){var n={};return n.saveToken=function(e){t.localStorage["token-tip"]=e},n.getToken=function(){return t.localStorage["token-tip"]},n.isLoggedIn=function(){var e=n.getToken();if(e){var o=JSON.parse(t.atob(e.split(".")[1]));return o.exp>Date.now()/1e3}return console.log("Not logged..."),!1},n.currentUser=function(){if(n.isLoggedIn()){var e=n.getToken(),o=JSON.parse(t.atob(e.split(".")[1]));return o.username}},n.register=function(t){return e.post("/register",t).success(function(){console.log("user succesfully registered")})},n.logIn=function(t){return console.log("executing login"),e.post("/login",t).success(function(e){n.saveToken(e.token),n.saveRole(e.role)})},n.saveRole=function(e){t.localStorage.userRole=e},n.logOut=function(){t.localStorage.removeItem("token-tip"),t.localStorage.removeItem("userRole")},n.getRole=function(){return t.localStorage.userRole},n}]),app.config(["$stateProvider","$urlRouterProvider",function(e,t){e.state("home",{url:"/home",templateUrl:"/partials/home.html",controller:"MainCtrl",resolve:{logs:function(e,t){return t.getActivities()},subs:function(e,t){return t.getAll()}}}),e.state("ideas",{url:"/ideas/{id}",templateUrl:"/partials/ideas.html",controller:"ideasCtrl",resolve:{idea:["$stateParams","ideas",function(e,t){return t.get(e.id)}]}}),e.state("login",{url:"/login",templateUrl:"/partials/login.html",controller:"AuthCtrl",onEnter:["$state","auth",function(e,t){t.isLoggedIn()&&e.go("home")}]}),e.state("register",{url:"/register",templateUrl:"/partials/register.html",controller:"AuthCtrl",onEnter:["$state","auth",function(e,t){t.isLoggedIn()&&e.go("home")}]}),e.state("users",{url:"/users",templateUrl:"/partials/users.html",controller:"UserCtrl",onEnter:["$state","auth",function(e,t){t.isLoggedIn()||e.go("home")}],resolve:{usersPromise:["$stateParams","users",function(e,t){return t.getAll()}]}}),e.state("subjects",{url:"/subjects",templateUrl:"/partials/subjects.html",controller:"SubjectCtrl",onEnter:["$state","auth",function(e,t){t.isLoggedIn()||e.go("home")}],resolve:{subsPromise:["$stateParams","subjects",function(e,t){return t.getAll()}]}}),t.otherwise("home")}]);var app=angular.module("tips");app.controller("ActivityCtrl",["$scope","logger","auth",function(e,t,n){e.activities=t.activities,e.isLoggedIn=n.isLoggedIn}]);var app=angular.module("tips");app.controller("AuthCtrl",["$scope","$state","auth",function(e,t,n){e.user={},e.register=function(){n.register(e.user).error(function(t){e.error=t}).then(function(){e.registered=!0})},e.logIn=function(){n.logIn(e.user).error(function(t){e.error=t}).then(function(){t.go("home")})},e.currentUser=n.currentUser}]);var app=angular.module("tips");app.controller("ideasCtrl",["$scope","ideas","idea","auth","logger",function(e,t,n,o,r){e.idea=n,e.isLoggedIn=o.isLoggedIn,e.addComment=function(){""!==e.body&&(t.addComment(n._id,{body:e.body,author:"user",date:Date.now()}).success(function(t){e.idea.comments.push(t),r.getActivities()}),e.body="")},e.addVote=function(e){t.like("/ideas/"+n._id+"/comments/"+e._id+"/upvote",e)},e.downVote=function(e){t.dislike("/ideas/"+n._id+"/comments/"+e._id+"/downvote",e)}}]);var app=angular.module("tips");app.controller("MainCtrl",["$scope","ideas","$state","$stateParams","auth","subjects","logger",function(e,t,n,o,r,s,u){function a(){"student"==r.getRole()&&e.types.splice(2,2)}function c(e){var n=t.ideas.indexOf(e);t.ideas.splice(n,1)}function l(e,t){var n=t.indexOf(e);t.splice(n,1)}function d(e,t){t.push(e)}e.noTagAdd=function(){return!1},e.noTagRemove=function(){return!1},e.urlRegex=RegExp("^((https?|ftp)://)?([a-z]+[.])?[a-z0-9-]+([.][a-z]{1,4}){1,2}(/.*[?].*)?$","i"),e.req=function(){t.getAll(e.data.ideasSort.value)},e.validateProfOrDir=function(){return"director"==r.getRole()||"professor"==r.getRole()},e.validateDir=function(){return"director"==r.getRole()},e.subjects=s.subjects,e.subjectsSelected=[],e.links=[],e.newTags=[],e.tags=[],e.isLoggedIn=r.isLoggedIn,e.ideas=t.ideas,e.types=[{value:"available",name:"Available ideas"},{value:"accepted",name:"Accepted ideas for tips"},{value:"pending",name:"Ideas pending approval"},{value:"deleted",name:"Deleted ideas"}],e.addSubject=function(t){d(t,e.subjectsSelected),l(t,s.subjects)},e.removeSubject=function(t){d(t,s.subjects),l(t,e.subjectsSelected)},e.addLink=function(){e.urlForm.urlInput.$valid&&null!=e.newLink&&""!=e.newLink&&(e.links.push(e.newLink),e.newLink="")},e.formatLink=function(e){return"htt"!=e.substring(0,3)&&(e="//"+e),e},e.addIdea=function(){if(e.title&&""!==e.title){for(i=0;i<e.tags.length;i++)e.newTags.push(e.tags[i].text);t.create({title:e.title,description:e.description,date:Date.now(),subjects:e.subjectsSelected,links:e.links,tags:e.newTags,user:r.username}).success(function(n){n.subjects=e.copySubjectsSelected,t.ideas.push(n),e.copySubjectsSelected=[],u.getActivities()}).error(function(t,n){403==n&&(e.error={message:""},e.error.message="Your user is not authorized for this action")}),e.title="",e.description="",e.links=[],e.subjectsSelected=[],e.newTags=[],e.tags=[]}},e.remove=function(e){t.removeIdea(e).success(function(t){console.log("idea borrada"),n.reload(),c(e),u.getActivities()})},e.addVote=function(e){t.like("/ideas/"+e._id+"/upvote",e)},e.downVote=function(e){t.dislike("/ideas/"+e._id+"/downvote",e)},e.accept=function(e){t.accept(e).success(function(){u.getActivities()}),c(e)},e.enroll=function(e){t.enroll(e).success(function(){u.getActivities()}),c(e)},e.deleteIdea=function(e){t.deleteIdea(e).success(function(){u.getActivities()}),c(e)},e.reject=function(e){t.reject(e).success(function(){u.getActivities()}),c(e)},e.currentUser=r.currentUser,a()}]);var app=angular.module("tips");app.controller("NavCtrl",["$scope","auth",function(e,t){e.isLoggedIn=t.isLoggedIn,e.currentUser=t.currentUser,e.logOut=t.logOut,e.validateDir=function(){return"director"==t.getRole()}}]);var app=angular.module("tips");app.controller("SubjectCtrl",["$scope","$state","auth","subjects",function(e,t,n,o){function r(e){var t=o.subjects.indexOf(idea);o.subjects.splice(t,1)}e.currentUser=n.currentUser,e.isLoggedIn=n.isLoggedIn,e.subjects=o.subjects,e.addSubject=function(){e.title&&""!==e.title&&(o.create({title:e.title,description:e.description}).error(function(t,n){403==n&&(e.error={message:""},e.error.message="Your user is not authorized for this action")}),e.title="",e.description="")},e.remove=function(n){o.removeSubject(n).success(function(e){console.log("materia borrada"),t.reload(),r(n)}).error(function(t,n){403==n&&(e.error={message:""},e.error.message="Your user is not authorized for this action")})},e.edit=function(t){e.editing=!0,e.toEdit=t,e.title=t.title,e.description=t.description},e.editSubject=function(){e.title&&""!==e.title&&(o.edit({_id:e.toEdit._id,title:e.title,description:e.description}).error(function(t,n){403==n&&(e.error={message:""},e.error.message="Your user is not authorized for this action")}),e.title="",e.description="",e.editing=!1,e.toEdit=null)},e.cancelEdit=function(){e.editing=!1,e.toEdit=null,e.title="",e.description=""}}]);var app=angular.module("tips");app.controller("UserCtrl",["$scope","users","auth",function(e,t,n){e.users=t.users,e.isLoggedIn=n.isLoggedIn,e.changeRole=function(e,n){t.changeRole(e,n)},e.roles=[{value:"director",name:"Director"},{value:"professor",name:"Professor"},{value:"student",name:"Student"},{value:"pending",name:"Pending"},{value:"disabled",name:"Disabled"}]}]);var app=angular.module("tips");app.factory("logger",["$http","auth",function(e,t){var n={activities:[]};return n.getActivities=function(){return e.get("/activities").success(function(e){angular.copy(e,n.activities),console.log("activities loaded")})},n}]);var app=angular.module("tips");app.factory("ideas",["$http","auth","logger","subjects",function(e,t,n,o){var r={ideas:[]};return r.like=function(n,o){return e.put(n,null,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){o.upvotes+=1})},r.dislike=function(n,o){return e.put(n,null,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){o.downvotes-=1})},r.getAll=function(t){return e({url:"/ideas",method:"GET",params:{type:t}}).success(function(e){console.log(e),angular.copy(e,r.ideas),console.log("ideas loaded"),n.getActivities(),o.getAll()})},r.create=function(n){return e.post("/ideas",n,{headers:{Authorization:"Bearer "+t.getToken()}})},r.upvote=function(n){return e.put("/ideas/"+n._id+"/upvote",null,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){ideas.upvotes+=1})},r.get=function(t){return e.get("/ideas/"+t).then(function(e){return e.data})},r.addComment=function(n,o){return e.post("/ideas/"+n+"/comments",o,{headers:{Authorization:"Bearer "+t.getToken()}})},r.removeIdea=function(n){return console.log("sending removal of idea with token "+t.getToken()),e.post("ideas/remove/"+n._id,null,{headers:{Authorization:"Bearer "+t.getToken()}})},r.accept=function(n){return e.post("ideas/accept/"+n._id,null,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){})},r.deleteIdea=function(n){return e.post("ideas/delete/"+n._id,null,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){})},r.enroll=function(n){return e.post("ideas/enroll/"+n._id,null,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){})},r.reject=function(n){return e.post("ideas/reject/"+n._id,null,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){})},r}]);var app=angular.module("tips");app.factory("subjects",["$http","auth",function(e,t){var n={subjects:[]};return n.getAll=function(){return e.get("/subjects").success(function(e){angular.copy(e,n.subjects),console.log("subjects loaded")})},n.create=function(o){return e.post("/subjects/create",o,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){n.getAll()})},n.edit=function(o){return e.post("/subjects/edit",o,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){n.getAll()})},n.removeSubject=function(n){return e.post("/subjects/delete",{_id:n._id},{headers:{Authorization:"Bearer "+t.getToken()}})},n}]);var app=angular.module("tips");app.factory("users",["$http","auth",function(e,t){var n={users:[]};return n.getAll=function(){return e.get("/users").success(function(e){angular.copy(e,n.users),console.log("users loaded")})},n.changeRole=function(n,o){return e.post("/users/changeRole",{_id:n._id,value:o.value},{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(){n.userRole.title=o.value})},n}]);